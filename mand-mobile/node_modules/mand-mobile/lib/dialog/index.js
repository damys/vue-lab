import Vue from 'vue';
import Dialog from './dialog';
var DialogConstructor = Vue.extend(Dialog);

var noop = function noop() {};

var generate = function generate(_ref) {
  var _ref$title = _ref.title,
      title = _ref$title === undefined ? '' : _ref$title,
      _ref$icon = _ref.icon,
      icon = _ref$icon === undefined ? '' : _ref$icon,
      _ref$content = _ref.content,
      content = _ref$content === undefined ? '' : _ref$content,
      _ref$closable = _ref.closable,
      closable = _ref$closable === undefined ? false : _ref$closable,
      _ref$btns = _ref.btns,
      btns = _ref$btns === undefined ? [] : _ref$btns;

  var vm = new DialogConstructor({
    propsData: {
      value: true,
      title: title,
      icon: icon,
      content: content,
      closable: closable,
      btns: btns
    }
  }).$mount();

  vm.$on('input', function (val) {
    if (!val) {
      vm.value = false;
    }
  });
  vm.$on('hide', function () {
    vm.$destroy();
    document.body.removeChild(vm.$el);
  });

  return vm;
};

Dialog.confirm = function (_ref2) {
  var _ref2$title = _ref2.title,
      title = _ref2$title === undefined ? '' : _ref2$title,
      _ref2$icon = _ref2.icon,
      icon = _ref2$icon === undefined ? '' : _ref2$icon,
      _ref2$content = _ref2.content,
      content = _ref2$content === undefined ? '' : _ref2$content,
      _ref2$cancelText = _ref2.cancelText,
      cancelText = _ref2$cancelText === undefined ? '取消' : _ref2$cancelText,
      _ref2$confirmText = _ref2.confirmText,
      confirmText = _ref2$confirmText === undefined ? '确定' : _ref2$confirmText,
      _ref2$onConfirm = _ref2.onConfirm,
      onConfirm = _ref2$onConfirm === undefined ? noop : _ref2$onConfirm;

  var vm = generate({
    title: title,
    icon: icon,
    content: content,
    btns: [{
      text: cancelText,
      handler: function handler() {
        return vm.close();
      }
    }, {
      text: confirmText,
      handler: function handler() {
        if (onConfirm() !== false) {
          vm.close();
        }
      }
    }]
  });

  return vm;
};

Dialog.alert = function (_ref3) {
  var _ref3$title = _ref3.title,
      title = _ref3$title === undefined ? '' : _ref3$title,
      _ref3$icon = _ref3.icon,
      icon = _ref3$icon === undefined ? '' : _ref3$icon,
      _ref3$content = _ref3.content,
      content = _ref3$content === undefined ? '' : _ref3$content,
      _ref3$confirmText = _ref3.confirmText,
      confirmText = _ref3$confirmText === undefined ? '确定' : _ref3$confirmText,
      _ref3$onConfirm = _ref3.onConfirm,
      onConfirm = _ref3$onConfirm === undefined ? noop : _ref3$onConfirm;

  var vm = generate({
    title: title,
    icon: icon,
    content: content,
    btns: [{
      text: confirmText,
      handler: function handler() {
        if (onConfirm() !== false) {
          vm.close();
        }
      }
    }]
  });

  return vm;
};

Dialog.succeed = function (props) {
  props.icon = 'circle-right';
  return Dialog.confirm(props);
};

Dialog.failed = function (props) {
  props.icon = 'circle-cross';
  return Dialog.confirm(props);
};

export default Dialog;